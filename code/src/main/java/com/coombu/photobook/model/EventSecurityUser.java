package com.coombu.photobook.model;

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
// Generated Nov 3, 2013 6:30:53 PM by Hibernate Tools 4.0.0
import javax.xml.bind.annotation.XmlTransient;

/**
 * EventSecurityUser generated by hbm2java
 */	
@XmlRootElement
@Entity
@Table(name = "event_security_user")
public class EventSecurityUser extends AuditTrail implements
		java.io.Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "EVENT_SECURITY_USER_ID", unique = true, nullable = false)
	private long eventSecurityUserId;
	
	@Column(name = "ROLE_ID", nullable = false)
	private short roleId;

	@Column(name = "IMAGE_COUNT")
	private long imageCount;
	
	@Column(name = "COMMENT_COUNT")
	private long commentCount;
	
	@Column(name = "VOTE_COUNT")
	private long voteCount;
	
	@Column(name = "TAG_COUNT")
	private long tagCount;
	
	@Column(name = "USER_STATUS_TYPE_ID")
	private long userStatusTypeId;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SECURITY_USER_ID", nullable = false)
	private SecurityUser securityUser;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "EVENT_ID", nullable = false)
	private Event event;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventSecurityUser")
	private Set<CommentVote> commentVotes = new HashSet<>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventSecurityUser")
	private Set<ImageVote> imageVotes = new HashSet<>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventSecurityUser")
	private Set<ImageTag> imageTags = new HashSet<>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventSecurityUser")
	private Set<Image> images = new HashSet<>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventSecurityUser")
	private Set<Comment> comments = new HashSet<>(0);
/*
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventSecurityUser")
	@LazyCollection(LazyCollectionOption.EXTRA)
	private Set<ImageViewCount> imageViewCount = new HashSet<>(0);
*/
	
	public EventSecurityUser() {
	}

	public EventSecurityUser(int eventSecurityUserId,
			SecurityUser securityUser, Event event, Timestamp createTimestamp,
			long createdBy) {
		this.eventSecurityUserId = eventSecurityUserId;
		this.securityUser = securityUser;
		this.event = event;
		this.createTimestamp = createTimestamp;
		this.createdBy = createdBy;
	}

	public EventSecurityUser(int eventSecurityUserId,
			SecurityUser securityUser, Event event, Timestamp createTimestamp,
			long createdBy, Timestamp updateTimestamp, Long updatedBy,
			Set<CommentVote> commentVotes, Set<ImageVote> imageVotes,
			Set<ImageTag> imageTags, Set<Image> images, Set<Comment> comments) {
		this.eventSecurityUserId = eventSecurityUserId;
		this.securityUser = securityUser;
		this.event = event;
		this.createTimestamp = createTimestamp;
		this.createdBy = createdBy;
		this.updateTimestamp = updateTimestamp;
		this.updatedBy = updatedBy;
		this.commentVotes = commentVotes;
		this.imageVotes = imageVotes;
		this.imageTags = imageTags;
		this.images = images;
		this.comments = comments;
	}

	/**
	 * @return the roleId
	 */
	public short getRoleId() {
		return roleId;
	}

	/**
	 * @param roleId the roleId to set
	 */
	public void setRoleId(short roleId) {
		this.roleId = roleId;
	}

	/**
	 * @return the imageCount
	 */
	public long getImageCount() {
		return imageCount;
	}

	/**
	 * @param imageCount the imageCount to set
	 */
	public void setImageCount(long imageCount) {
		this.imageCount = imageCount;
	}

	/**
	 * @return the commentCount
	 */
	public long getCommentCount() {
		return commentCount;
	}

	/**
	 * @param commentCount the commentCount to set
	 */
	public void setCommentCount(long commentCount) {
		this.commentCount = commentCount;
	}

	/**
	 * @return the voteCount
	 */
	public long getVoteCount() {
		return voteCount;
	}

	/**
	 * @param voteCount the voteCount to set
	 */
	public void setVoteCount(long voteCount) {
		this.voteCount = voteCount;
	}

	/**
	 * @return the tagCount
	 */
	public long getTagCount() {
		return tagCount;
	}

	/**
	 * @param tagCount the tagCount to set
	 */
	public void setTagCount(long tagCount) {
		this.tagCount = tagCount;
	}

	/**
	 * @return the userStatusTypeId
	 */
	public long getUserStatusTypeId() {
		return userStatusTypeId;
	}

	/**
	 * @param userStatusTypeId the userStatusTypeId to set
	 */
	public void setUserStatusTypeId(long userStatusTypeId) {
		this.userStatusTypeId = userStatusTypeId;
	}

	@XmlElement
	public long getEventSecurityUserId() {
		return this.eventSecurityUserId;
	}

	public void setEventSecurityUserId(long eventSecurityUserId) {
		this.eventSecurityUserId = eventSecurityUserId;
	}

	@XmlTransient
	public SecurityUser getSecurityUser() {
		return this.securityUser;
	}

	public void setSecurityUser(SecurityUser securityUser) {
		this.securityUser = securityUser;
	}

	@XmlElement
	public Event getEvent() {
		return this.event;
	}

	public void setEvent(Event event) {
		this.event = event;
	}


	@XmlTransient
	public Set<CommentVote> getCommentVotes() {
		return this.commentVotes;
	}

	public void setCommentVotes(Set<CommentVote> commentVotes) {
		this.commentVotes = commentVotes;
	}

	@XmlTransient
	public Set<ImageVote> getImageVotes() {
		return this.imageVotes;
	}

	public void setImageVotes(Set<ImageVote> imageVotes) {
		this.imageVotes = imageVotes;
	}

	@XmlTransient
	public Set<ImageTag> getImageTags() {
		return this.imageTags;
	}

	public void setImageTags(Set<ImageTag> imageTags) {
		this.imageTags = imageTags;
	}

	@XmlTransient
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

	@XmlTransient
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}
	/**
	 * @return the imageViewCount
	 *//*
	public Set<ImageViewCount> getImageViewCount() {
		return imageViewCount;
	}

	*//**
	 * @param imageViewCount the imageViewCount to set
	 *//*
	public void setImageViewCount(Set<ImageViewCount> imageViewCount) {
		this.imageViewCount = imageViewCount;
	}*/

	@Override
	public String toString() {
	    return String.format("%s[id=%d]", getClass().getSimpleName(), getEventSecurityUserId());
	}
}
