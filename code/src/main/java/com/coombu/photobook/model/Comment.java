package com.coombu.photobook.model;

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

// Generated Nov 3, 2013 6:30:53 PM by Hibernate Tools 4.0.0

/**
 * Comment generated by hbm2java
 */
@XmlRootElement
@Entity
@Table(name = "comment")
public class Comment extends AuditTrail implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "COMMENT_ID", unique = true, nullable = false)
	private Integer commentId;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IMAGE_ID", nullable = false)
	private Image image;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_COMMENT_ID", nullable = true)
	private Comment comment;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "EVENT_SECURITY_USER_ID", nullable = false)
	private EventSecurityUser eventSecurityUser;

	@Column(name = "COMMENT_TEXT", nullable = false, length = 500)
	private String commentText;

	@Column(name = "COMMENT_STATUS_ID", nullable = false)
	private short commentStatusId;

	@Column(name = "POSITIVE_VOTE_COUNT", nullable = false)
	private int positiveVoteCount;

	@Column(name = "NEGATIVE_VOTE_COUNT", nullable = false)
	private int negativeVoteCount;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment")
	private Set<Comment> comments = new HashSet<>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment")
	private Set<CommentVote> commentVotes = new HashSet<>(0);

	@Column(name = "CREATE_TMSTMP", insertable = false, updatable = false)
	private Timestamp createdTimeStamp;

	public Comment() {
	}

	public Comment(int commentId, Image image, Comment comment,
			EventSecurityUser eventSecurityUser, String commentText,
			short commentStatusId, int positiveVoteCount,
			int negativeVoteCount, Timestamp createTimestamp, long createdBy) {
		this.commentId = commentId;
		this.image = image;
		this.comment = comment;
		this.eventSecurityUser = eventSecurityUser;
		this.commentText = commentText;
		this.commentStatusId = commentStatusId;
		this.positiveVoteCount = positiveVoteCount;
		this.negativeVoteCount = negativeVoteCount;
		this.createTimestamp = createTimestamp;
		this.createdBy = createdBy;
	}

	public Comment(int commentId, Image image, Comment comment,
			EventSecurityUser eventSecurityUser, String commentText,
			short commentStatusId, int positiveVoteCount,
			int negativeVoteCount, Timestamp createTimestamp, long createdBy,
			Timestamp updateTimestamp, Long updatedBy, Set<Comment> comments,
			Set<CommentVote> commentVotes) {
		this.commentId = commentId;
		this.image = image;
		this.comment = comment;
		this.eventSecurityUser = eventSecurityUser;
		this.commentText = commentText;
		this.commentStatusId = commentStatusId;
		this.positiveVoteCount = positiveVoteCount;
		this.negativeVoteCount = negativeVoteCount;
		this.createTimestamp = createTimestamp;
		this.createdBy = createdBy;
		this.updateTimestamp = updateTimestamp;
		this.updatedBy = updatedBy;
		this.comments = comments;
		this.commentVotes = commentVotes;
	}

	@XmlElement
	public Timestamp getCreatedTimeStamp() {
		return createdTimeStamp;
	}

	public void setCreatedTimeStamp(Timestamp createdTimeStamp) {
		this.createdTimeStamp = createdTimeStamp;
	}

	@XmlElement
	public Integer getCommentId() {
		return this.commentId;
	}

	public void setCommentId(Integer commentId) {
		this.commentId = commentId;
	}

	@XmlTransient
	public Image getImage() {
		return this.image;
	}

	public void setImage(Image image) {
		this.image = image;
	}

	@XmlTransient
	public Comment getComment() {
		return this.comment;
	}

	public void setComment(Comment comment) {
		this.comment = comment;
	}

	@XmlTransient
	public EventSecurityUser getEventSecurityUser() {
		return this.eventSecurityUser;
	}

	public void setEventSecurityUser(EventSecurityUser eventSecurityUser) {
		this.eventSecurityUser = eventSecurityUser;
	}

	@XmlElement
	public String getCommentText() {
		return this.commentText;
	}

	public void setCommentText(String commentText) {
		this.commentText = commentText;
	}

	@XmlElement
	public short getCommentStatusId() {
		return this.commentStatusId;
	}

	public void setCommentStatusId(short commentStatusId) {
		this.commentStatusId = commentStatusId;
	}

	@XmlElement
	public int getPositiveVoteCount() {
		return this.positiveVoteCount;
	}

	public void setPositiveVoteCount(int positiveVoteCount) {
		this.positiveVoteCount = positiveVoteCount;
	}

	@XmlElement
	public int getNegativeVoteCount() {
		return this.negativeVoteCount;
	}

	public void setNegativeVoteCount(int negativeVoteCount) {
		this.negativeVoteCount = negativeVoteCount;
	}

	@XmlTransient
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@XmlTransient
	public Set<CommentVote> getCommentVotes() {
		return this.commentVotes;
	}

	public void setCommentVotes(Set<CommentVote> commentVotes) {
		this.commentVotes = commentVotes;
	}

	@XmlTransient
	public String getShortCommentText() {
		if (commentText == null || commentText.length() <= 0)
			return "";
		if (commentText.length() > 40)
			return commentText.substring(0, 40);
		else
			return commentText;
	}
}
